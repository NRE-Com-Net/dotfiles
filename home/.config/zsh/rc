TERM=xterm-256color

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="bullet-train"
BULLETTRAIN_STATUS_EXIT_SHOW=true
BULLETTRAIN_DIR_FG=black
BULLETTRAIN_DIR_EXTENDED=2
BULLETTRAIN_GIT_COLORIZE_DIRTY=true
BULLETTRAIN_EXEC_TIME_SHOW=true

# Use hyphen-insensitive completion. Case sensitive completion must
# be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Change the command execution time stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="dd.mm.yyyy"

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

#set editor to vim
export EDITOR="vim"
export GIT_EDITOR="vim"


# Some special Aliases
alias reload="source ${HOME}/.zshrc"
alias root="sudo env \"HOME=${HOME}\" \"SSH_AUTH_SOCK=${SSH_AUTH_SOCK}\" zsh"
alias tmux="tmux -2"
alias vimfiler="vim -c \"VimFilerDouble\""

# Load overrides
if [ -f ${RC_PATH}/aliases ]; then
	source ${RC_PATH}/aliases
fi

# Load homeshick
if [ -d ${HOME}/.homesick ]; then
	source "${HOME}/.homesick/repos/homeshick/homeshick.sh"
	fpath=(${HOME}/.homesick/repos/homeshick/completions ${fpath})
	homeshick pull -q
	homeshick link -q
fi

[[ -e ${HOME}/.config/zsh/functions ]] && source "${HOME}/.config/zsh/functions"
[[ -s ${HOME}/.fzf ]] && ${HOME}/.fzf/install --all >/dev/null

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

if [ -f ${HOME}/.config/zsh/localrc ]; then
	source ${HOME}/.config/zsh/localrc
fi

setopt IGNORE_EOF
bindkey -s '^D' '^q_exit_shell\n'

if [[ -e /etc/redhat-release ]] && [[ $(cat /etc/redhat-release | awk '{print $7}' | awk -F '.' '{print $1}') -lt 6 ]] && [[ -e ~/.config/dircolors-solarized/dircolors.rhel5.256dark ]]; then
    eval `dircolors ~/.config/dircolors-solarized/dircolors.rhel5.256dark`
elif [[ -e ~/.config/dircolors-solarized/dircolors.256dark ]]; then
    eval `dircolors ~/.config/dircolors-solarized/dircolors.256dark`
fi

if [[ -z "${TMUX}" ]] && [[ ! -z "${SSH_TTY}" ]]; then
	if [ ! -z "${SSH_AUTH_SOCK}" -a "${SSH_AUTH_SOCK}" != "${HOME}/.ssh/agent_sock" ]; then
		unlink "${HOME}/.ssh/auth_sock" 2>/dev/null
		ln -sf "${SSH_AUTH_SOCK}" "${HOME}/.ssh/auth_sock"
		export SSH_AUTH_SOCK="${HOME}/.ssh/auth_sock"
	fi
fi

# Start tmux on connection
if [ "${PS1}" != "" -a "$(tmux -L remote has-session -t remote &>/dev/null; echo $?)" = 0 -a "${SSH_TTY:-x}" != x -a "$(which tmux 2>/dev/null)" != "" -a "${TMUX}" = "" ]; then
	tmux -L remote attach-session -t remote
elif [ "${PS1}" != "" -a "${SSH_TTY:-x}" != x -a "$(which tmux 2>/dev/null)" != "" -a "${TMUX}" = "" ]; then
	tmux -f ~/.tmux.conf -L remote new-session -s remote
fi
