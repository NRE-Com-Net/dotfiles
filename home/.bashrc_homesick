################################################
#
#
#	For Entries that you want only local or
#	per user use ${HOME}/.bashrc_local
#
#
################################################

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Load RVM, if you are using it
[[ -s $HOME/.rvm/scripts/rvm ]] && source $HOME/.rvm/scripts/rvm

# Load homeshick
if [ -d ${HOME}/.homesick ]; then
    source "${HOME}/.homesick/repos/homeshick/homeshick.sh"
    source "${HOME}/.homesick/repos/homeshick/completions/homeshick-completion.bash"
fi

#use english on commandline for better compatibility
export LANGUAGE="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"
#set editor to vim
export EDITOR="vim"
export GIT_EDITOR="vim"

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    source /etc/bash_completion
fi

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
HISTCONTROL=ignoreboth
# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


## Bash-it
# Path to the bash it configuration
export BASH_IT=$HOME/.bash_it

# Lock and Load a custom theme file
# location /.bash_it/themes/
export BASH_IT_THEME='powerline'

# Load Bash It
[ -d $BASH_IT ] && source $BASH_IT/bash_it.sh

# Load npm completion
if [ -f /usr/lib/node_modules/npm/lib/utils/completion.sh ]; then
    source /usr/lib/node_modules/npm/lib/utils/completion.sh
fi

# Some special Aliases
alias reload="source ${HOME}/.bashrc"
alias htop="TERM=screen-256color htop"
alias root="sudo -E bash"

# Load overrides
if [ -f ${HOME}/.bash_aliases ]; then
    source ${HOME}/.bash_aliases
fi

if [ -f ${HOME}/.bashrc_local ]; then
    source ${HOME}/.bashrc_local
fi

if [ -z "$TMUX" ]; then
  if [ ! -z "$SSH_TTY" ]; then
      if [ ! -z "SSH_AUTH_SOCK" ]; then
          ln -sf "$SSH_AUTH_SOCK" "$HOME/.ssh/auth_sock"
      fi
      export SSH_AUTH_SOCK="$HOME/.ssh/auth_sock"
  fi
fi

[ -e ~/.config/dircolors-solarized/dircolors.256dark ] && eval `dircolors ~/.config/dircolors-solarized/dircolors.256dark`

# Start tmux on connection
if [ "$PS1" != "" -a "$(tmux has-session -t remote &>/dev/null; echo $?)" = 0 -a "${SSH_TTY:-x}" != x -a "$(which tmux)" != "" -a "${TMUX}" = "" ]; then
    tmux -2 attach-session -t remote
elif [ "$PS1" != "" -a "${SSH_TTY:-x}" != x -a "$(which tmux)" != "" -a "${TMUX}" = "" ]; then
    tmux -2 new-session -s remote
fi
