#!/usr/bin/env bash
#
# vim: ts=2 sw=2 et ff=unix ft=bash syntax=sh

declare -a NREDF_DEFAULT_TOOLS

for NREDF_FUNCTIONS in "${NREDF_DOT_PATH}/shell/common/functions/"*; do
  source "${NREDF_FUNCTIONS}"
done

_nredf_get_sys_info
_nredf_set_defaults
_nredf_backup_rc
[[ -z ${SUDO_COMMAND} ]] && _nredf_sync_dotfiles
(bash "${NREDF_DOT_PATH}/shell/common/scripts/nredf_config.bash")
if [[ -e "${NREDF_CONFIG}/config.bash" ]]; then
  unset NREDF_CONFIGS
  declare -A NREDF_CONFIGS
  source "${NREDF_CONFIG}/config.bash"
fi
_nredf_set_ssh_agent
_nredf_set_local
[[ -z ${SUDO_COMMAND} ]] && _nredf_cleanup_dotfiles
if command -v gh &>/dev/null && ! gh auth status &>/dev/null; then
  echo -e "\033[1;33mTo get started with GitHub CLI, please run:\033[0m\033[1m gh auth login\033[0m"
  echo -e "\033[1;33mthis will simplify the tool downloads too\033[0m"
fi
[[ -z ${SUDO_COMMAND} ]] && _nredf_install_tools_default

# run shell exclusive things
echo -e "\033[1mCustomizing Shell\033[0m"
source "${NREDF_RC_PATH}/rc"

if [[ -d "${ASDF_DIR}" ]]; then
  source "${ASDF_DIR}/asdf.sh"
  source "${ASDF_DIR}/completions/asdf.bash"
  fpath=("${ASDF_DIR}/completions ${fpath[@]}")
fi

_nredf_os_specific
_nredf_set_local true
eval "$(atuin init "${NREDF_SHELL_NAME}")"
source "${NREDF_RC_PATH}/bindings"
_nredf_remote_multiplexer
